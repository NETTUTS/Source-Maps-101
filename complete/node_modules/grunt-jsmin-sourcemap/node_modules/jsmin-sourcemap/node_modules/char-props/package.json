{
  "name": "char-props",
  "description": "Utility for looking up line and column of a character at a given index and vice versa",
  "version": "0.1.3",
  "homepage": "https://github.com/twolfson/char-props",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/char-props.git"
  },
  "bugs": {
    "url": "https://github.com/twolfson/char-props/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/twolfson/char-props/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/charProps",
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "vows test/* --spec"
  },
  "devDependencies": {
    "grunt": "~0.3.12",
    "vows": "~0.6.4"
  },
  "keywords": [
    "character",
    "lookup",
    "line",
    "row",
    "column",
    "index"
  ],
  "readme": "# char-props\n\nUtility for looking up line and column of a character at a given index and vice versa.\n\n## Getting Started\nInstall the module with: `npm install charProps`\n\n## Documentation\n```js\n// charProps is a function which invokes the Indexer constructor\n\n// Indexer JSDoc\n/**\n * Indexer constructor (takes index and performs pre-emptive caching)\n * @constructor\n * @param {String} input Content to index\n */\n\n// Indexer.lineAt JSDoc\n/**\n * Get the line of the character at a certain index\n * @param {Number} index Index of character to retrieve line of\n * @param {Object} [options] Options to use for search\n * @param {Number} [options.minLine=0] Minimum line for us to search on\n * TODO: The following still have to be built/implemented\n * @param {Number} [options.maxLine=lines.length] Maximum line for us to search on\n * @param {String} [options.guess=\"average\"] Affects searching pattern -- can be \"high\", \"low\", or \"average\" (linear top-down, linear bottom-up, or binary)\n * @returns {Number} Line number of character\n */\n\n// Indexer.columnAt JSDoc\n/**\n * Get the column of the character at a certain index\n * @param {Number} index Index of character to retrieve column of\n * @returns {Number} Column number of character\n */\n\n// Indexer.indexAt JSDoc\n/**\n * Get the index of the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {Number} Index of character\n */\n\n// Indexer.charAt JSDoc\n/**\n * Get the character at a line and column\n * @param {Object} params Object containing line and column\n * @param {Number} params.line Line of character\n * @param {Number} params.column Column of character\n * @returns {String} Character at specified location\n */\n```\n\n## Examples\n### Initial load\n```js\nvar charProps = require('char-props'),\n    jquerySrc = fs.readFileSync('jquery.js', 'utf8');\n\n// Load jQuery into charProps\nvar jqueryProps = charProps(jquerySrc);\n```\n\n### lineAt usage\n```js\n// Look up line of character at index 42\njqueryProps.lineAt(42);\n```\n\n### columnAt usage\n```js\n// Look up column of character at index 88\njqueryProps.columnAt(88);\n```\n\n### indexAt usage\n```js\n// Look up the index of a character at line 9000, column 1\njqueryProps.indexAt({'line': 9000, 'column': 1});\n```\n\n### charAt usage\n```js\n// Get the character at line 20, column 20\njqueryProps.charAt({'line': 20, 'column': 20});\n```\n\n## lineAt advanced usage\n```js\n// Look up line of character at index 9001 with a minimum line of 99\njqueryProps.lineAt(9001, {'minLine': 99});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint your code via [grunt](http://gruntjs.com/) and test via [vows](http://vowsjs.org/).\n\n## License\nCopyright (c) 2012 Todd Wolfson\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "char-props@0.1.3",
  "_from": "char-props@~0.1.0"
}
